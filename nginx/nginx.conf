events {
    worker_connections 1024;
}

http {
    resolver 127.0.0.11 ipv6=off;

    # Define shared memory zones
    lua_shared_dict rate_limit_dict 10m;
    lua_shared_dict my_locks 1m;
    lua_shared_dict my_cache 10m;

    upstream webui {
        server webui:8080;
    }

    upstream auth {
        server auth:8080;
    }

    upstream recommender {
        server recommender:8080;
    }

    upstream persistence {
        server persistence:8080;
    }
    
    upstream image {
        server image:8080;
    }

    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=83r/s;

    init_by_lua_block {
        ngx.log(ngx.INFO, "Initializing test data...")
        local shared_dict = ngx.shared.rate_limit_dict
        shared_dict:set("test_key:batch", 100)
        shared_dict:set("test_key:used", 20)
        ngx.log(ngx.INFO, "Test data initialized successfully")
    }
    
    server {
        listen 8080;
        
        location / {
            default_type 'text/plain';
            proxy_pass http://webui;
        }

        location /tools.descartes.teastore.auth/rest {
            set $service_name "auth";
            access_by_lua_file lua_scripts/algorithm.lua;
            proxy_pass http://auth;
        }

        location /tools.descartes.teastore.recommender/rest {
            set $service_name "recommender";
            access_by_lua_file lua_scripts/algorithm.lua;
            proxy_pass http://recommender;
        }

        location /tools.descartes.teastore.persistence/rest {
            set $service_name "persistence";
            access_by_lua_file lua_scripts/algorithm.lua;
            proxy_pass http://persistence;
        }

        location /tools.descartes.teastore.image/rest {
            set $service_name "image";
            access_by_lua_file lua_scripts/algorithm.lua;
            proxy_pass http://image;
        }
    }
}
